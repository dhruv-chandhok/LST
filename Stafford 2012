var DATE_RANGE_2012 = ee.Filter.dayOfYear(188,188);
var YEAR_RANGE_2012 = ee.Filter.calendarRange(2012,2013, 'year');
var STUDYBOUNDS_2012 = geometry;
var DISPLAY = true;

Map.setOptions('SATELLITE');

Map.setCenter(-2.18261284481706,52.76884207757945, 9);

var LC07_bands_2012 = ['ST_B6', 'QA_PIXEL'];
var bandName_2012 = ['ST', 'QA_PIXEL'];

function cloudMask(image) {
  var qa_2012 = image.select('QA_PIXEL');
  var mask_2012 = qa_2012.bitwiseAnd(1 << 3)
    .or(qa_2012.bitwiseAnd(1 << 4));
  return image.updateMask(mask_2012.not());
}

var L7_2012 = ee.ImageCollection("LANDSAT/LE07/C02/T1_L2") 
  .select('ST_B6', 'QA_PIXEL')
  .filterBounds(STUDYBOUNDS_2012)
  .filter(DATE_RANGE_2012)
  .filter(YEAR_RANGE_2012)
  .map(cloudMask);

var filtered_L7_2012 = L7_2012.filter(ee.Filter.lt('CLOUD_COVER', 60));

print(filtered_L7_2012, 'Landsat 7 ST');


function applyScaleFactors(image) {
  var thermalBands_2012 = image.select('ST_B6').multiply(0.00341802).add(149.0)
    .subtract(273.15);
  return image.addBands(thermalBands_2012, null, true);
}


var landsatST_2012 = filtered_L7_2012.map(applyScaleFactors);

var mean_LandsatST_2012 = landsatST_2012.mean();

var clip_mean_ST_2012 = mean_LandsatST_2012.clip(STUDYBOUNDS_2012);

Map.addLayer(clip_mean_ST_2012, {
  bands: 'ST_B6',
  min: 20, max: 45.5,
  palette: ['blue', 'white', 'red']
}, "ST_2012", DISPLAY);

  print("Stats for 2012")


var Stafford_2012 = clip_mean_ST_2012.reduceRegions({
  collection: Affluent,
  reducer: ee.Reducer.mean().combine({
    reducer2: ee.Reducer.min().combine(ee.Reducer.max(), '', true)
  }),
  scale: 30
});

print(Stafford_2012);

// Add a legend with a colour palette and descriptions

var legend = ui.Panel({
  style: {
    position: 'bottom-left',
    padding: '8px 15px'
  }
});
 
var legendTitle = ui.Label({
  value: 'Land Surface Temperature 2012',
  style: {
    fontWeight: 'bold',
    fontSize: '18px',
    margin: '0 0 4px 0',
    padding: '0'
    }
});
 
legend.add(legendTitle);
 
var makeRow = function(color, name) {
 
      var colorBox = ui.Label({
        style: {
          backgroundColor: '#' + color,
          padding: '8px',
          margin: '0 0 4px 0'
        }
      });
 
      var description = ui.Label({
        value: name,
        style: {margin: '0 0 4px 6px'}
      });
 
      return ui.Panel({
        widgets: [colorBox, description],
        layout: ui.Panel.Layout.Flow('horizontal')
      });
};
 
var palette = [ '0000ff', 'ffffff', 'ff0000'];
 
var names = ['<30C','30-40C','>40C'];
 
for (var i = 0; i < 3; i++) {
  legend.add(makeRow(palette[i], names[i]));
  }  
 
Map.add(legend);
